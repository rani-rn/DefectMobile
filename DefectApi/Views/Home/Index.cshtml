<div class="container">
    <h2 class="text-header text-center">Dashboard</h2>
    <div class="filters">
        <div>
            <label for="timeFilter" class="form-label">Filter by Time Period</label>
            <select id="timeFilter" name="timePeriod" class="form-control">
                <option value="daily" selected>Daily</option>
                <option value="weekly">Weekly</option>
                <option value="monthly">Monthly</option>
                <option value="annual">Annual</option>
            </select>
        </div>
    </div>

    <div class="dashboard-container">
        <div class="summary-boxes">
            <div class="summary-box"><span>Daily</span>
                <div id="dailyDefect">0</div>
            </div>
            <div class="summary-box"><span>Weekly</span>
                <div id="weeklyDefect">0</div>
            </div>
            <div class="summary-box"><span>Monthly</span>
                <div id="monthlyDefect">0</div>
            </div>
            <div class="summary-box"><span>Annual</span>
                <div id="annualDefect">0</div>
            </div>
        </div>
        <div class="chart-container">
            <canvas id="chart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            let chartInstance = null;

            function getRandomColor() {
                const letters = '0123456789ABCDEF';
                let color = '#';
                for (let i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }

            function loadChart(timePeriod = 'daily') {
                $.ajax({
                    url: '@Url.Action("GetChartData", "Defect")',
                    type: 'GET',
                    data: { timePeriod: timePeriod },
                    success: function (response) {
                        console.log("Chart data loaded:", response);

                        const labels = response.labels || [];
                        const rawDatasets = response.datasets || [];

                        $("#dailyDefect").text(response.daily ?? 0);
                        $("#weeklyDefect").text(response.weekly ?? 0);
                        $("#monthlyDefect").text(response.monthly ?? 0);
                        $("#annualDefect").text(response.annual ?? 0);

                        if (chartInstance) {
                            chartInstance.destroy();
                        }

                  
                        const filteredLabels = labels;

                        const filteredDatasets = rawDatasets.map(set => {
                            const color = set.backgroundColor || getRandomColor();
                            return {
                                ...set,
                                data: set.data,
                                backgroundColor: labels.map(() => color),
                            };
                        });

                        const ctx = document.getElementById("chart").getContext("2d");

                        chartInstance = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: labels,
                                datasets: filteredDatasets
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                interaction: {
                                    mode: 'nearest',
                                    axis: 'x',
                                    intersect: true
                                },
                                plugins: {
                                    tooltip: {
                                        mode: 'nearest',
                                        intersect: true,
                                        filter: function (tooltipItem) {
                                            return tooltipItem.raw !== 0;
                                        }
                                    },
                                    legend: {
                                        display: false
                                    }
                                },
                             
                                scales: {
                                    x: { stacked: true },
                                    y: { stacked: true, beginAtZero: true }
                                }
                            }
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX Error:", status, error);
                        console.log(xhr.responseText);
                    }
                });
            }

            loadChart();

            $("#timeFilter").change(function () {
                let selectedTimePeriod = $(this).val();
                loadChart(selectedTimePeriod);
            });
        });
    </script>
}

<style>
    
    .dashboard-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        max-width: 1000px;
        width: 100%;
    }

    .chart-container {
        width: 100%;
        max-width: 800px;
        height: 400px;
        display: flex;
        justify-content: center;
        align-items: center;
        background: white;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 10px;
    }

    canvas#chart {
        width: 100% !important;
        height: 100% !important;
    }

    .summary-boxes {
        display: flex;
        gap: 15px;
        width: 100%;
        justify-content: center;
    }

    .summary-box {
        width: 120px;
        height: 80px;
        background-color: #0F58A8;
        color: white;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-radius: 10px;
        font-size: 18px;
        font-weight: bold;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .summary-box span {
        font-size: 14px;
    }

    .filters {
        display: flex;
        gap: 15px;
        justify-content: center;
    }

    .filters select {
        padding: 8px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }
</style>
